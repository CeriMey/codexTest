#pragma once

#include "klv.h"
#include "st_common.h"

namespace misb {
namespace st0601 {

// Byte 13 of the synthetic UL identifies ST 0601
constexpr uint8_t ST_ID = 0x01;

#define ST0601_TAGS(X) \
  X(UNIX_TIMESTAMP, 2) \
  /* Platform orientation / motion */ \
  X(PLATFORM_HEADING_ANGLE, 5) \
  X(PLATFORM_PITCH_ANGLE, 6) \
  X(PLATFORM_ROLL_ANGLE, 7) \
  X(PLATFORM_TRUE_AIRSPEED, 8) \
  X(PLATFORM_INDICATED_AIRSPEED, 9) \
  X(PLATFORM_MAGNETIC_HEADING, 64) \
  X(PLATFORM_COURSE_ANGLE, 112) \
  /* Sensor geometry */ \
  X(SENSOR_LATITUDE, 13) \
  X(SENSOR_LONGITUDE, 14) \
  X(SENSOR_TRUE_ALTITUDE, 15) \
  X(SENSOR_HORIZONTAL_FOV, 16) \
  X(SENSOR_VERTICAL_FOV, 17) \
  X(SENSOR_RELATIVE_AZIMUTH_ANGLE, 18) \
  X(SENSOR_RELATIVE_ELEVATION_ANGLE, 19) \
  X(SENSOR_RELATIVE_ROLL_ANGLE, 20) \
  X(SENSOR_NORTH_VELOCITY, 79) \
  X(SENSOR_EAST_VELOCITY, 80) \
  X(SENSOR_ELLIPSOID_HEIGHT, 75) \
  X(ALTERNATE_PLATFORM_ELLIPSOID_HEIGHT, 76) \
  /* Targeting / range */ \
  X(SLANT_RANGE, 21) \
  X(TARGET_WIDTH, 22) \
  X(TARGET_LATITUDE, 40) \
  X(TARGET_LONGITUDE, 41) \
  X(TARGET_LOCATION_ELEVATION, 42) \
  X(TARGET_TRACK_GATE_WIDTH, 43) \
  X(TARGET_TRACK_GATE_HEIGHT, 44) \
  X(TARGET_ERROR_CE90, 45) \
  X(TARGET_ERROR_LE90, 46) \
  /* Frame geometry */ \
  X(FRAME_CENTER_LATITUDE, 23) \
  X(FRAME_CENTER_LONGITUDE, 24) \
  X(FRAME_CENTER_ELEVATION, 25) \
  X(OFFSET_CORNER_LAT_PT1, 26) \
  X(OFFSET_CORNER_LON_PT1, 27) \
  X(OFFSET_CORNER_LAT_PT2, 28) \
  X(OFFSET_CORNER_LON_PT2, 29) \
  X(OFFSET_CORNER_LAT_PT3, 30) \
  X(OFFSET_CORNER_LON_PT3, 31) \
  X(OFFSET_CORNER_LAT_PT4, 32) \
  X(OFFSET_CORNER_LON_PT4, 33) \
  X(CORNER_LAT_PT1_FULL, 82) \
  X(CORNER_LON_PT1_FULL, 83) \
  X(CORNER_LAT_PT2_FULL, 84) \
  X(CORNER_LON_PT2_FULL, 85) \
  X(CORNER_LAT_PT3_FULL, 86) \
  X(CORNER_LON_PT3_FULL, 87) \
  X(CORNER_LAT_PT4_FULL, 88) \
  X(CORNER_LON_PT4_FULL, 89) \
  /* Environment */ \
  X(ICING_DETECTED, 34) \
  X(WIND_DIRECTION, 35) \
  X(WIND_SPEED, 36) \
  X(STATIC_PRESSURE, 37) \
  X(DENSITY_ALTITUDE, 38) \
  X(OUTSIDE_AIR_TEMPERATURE, 39) \
  X(GENERIC_FLAG_DATA01, 47) \
  X(DIFFERENTIAL_PRESSURE, 49) \
  X(PLATFORM_ANGLE_OF_ATTACK, 50) \
  X(PLATFORM_VERTICAL_SPEED, 51) \
  X(PLATFORM_SIDESLIP_ANGLE, 52) \
  X(AIRFIELD_BAROMETRIC_PRESSURE, 53) \
  X(AIRFIELD_ELEVATION, 54) \
  X(RELATIVE_HUMIDITY, 55) \
  /* Platform status / misc */ \
  X(PLATFORM_GROUND_SPEED, 56) \
  X(GROUND_RANGE, 57) \
  X(PLATFORM_FUEL_REMAINING, 58) \
  X(WEAPON_LOAD, 60) \
  X(WEAPON_FIRED, 61) \
  X(LASER_PRF_CODE, 62) \
  X(SENSOR_FOV_NAME, 63) \
  X(UAS_LS_VERSION_NUMBER, 65) \
  X(ALTERNATE_PLATFORM_LATITUDE, 67) \
  X(ALTERNATE_PLATFORM_LONGITUDE, 68) \
  X(ALTERNATE_PLATFORM_ALTITUDE, 69) \
  X(ALTERNATE_PLATFORM_HEADING, 71) \
  X(EVENT_START_TIME_UTC, 72) \
  X(VMTI_LOCAL_SET, 74) \
  X(FRAME_CENTER_HAE, 78) \
  /* Attitude (full range) */ \
  X(PLATFORM_PITCH_ANGLE_FULL, 90) \
  X(PLATFORM_ROLL_ANGLE_FULL, 91) \
  X(PLATFORM_AOA_FULL, 92) \
  X(PLATFORM_SIDESLIP_ANGLE_FULL, 93) \
  /* 94..142 various/opaque */ \
  X(MIIS_CORE_IDENTIFIER, 94) \
  X(SAR_MOTION_IMAGERY_LOCAL_SET, 95) \
  X(TARGET_WIDTH_EXTENDED, 96) \
  X(RANGE_IMAGE_LOCAL_SET, 97) \
  X(GEO_REGISTRATION_LOCAL_SET, 98) \
  X(COMPOSITE_IMAGING_LOCAL_SET, 99) \
  X(SEGMENT_LOCAL_SET, 100) \
  X(AMEND_LOCAL_SET, 101) \
  X(SDCC_FLP, 102) \
  X(DENSITY_ALTITUDE_EXTENDED, 103) \
  X(SENSOR_ELLIPSOID_HEIGHT_EXTENDED, 104) \
  X(ALTERNATE_PLATFORM_ELLIPSOID_HEIGHT_EXTENDED, 105) \
  X(OPERATIONAL_BASE, 107) \
  X(BROADCAST_SOURCE, 108) \
  X(RANGE_TO_RECOVERY_LOCATION, 109) \
  X(TIME_AIRBORNE, 110) \
  X(PROPULSION_UNIT_SPEED, 111) \
  X(ALTITUDE_AGL, 113) \
  X(RADAR_ALTIMETER, 114) \
  X(CONTROL_COMMAND, 115) \
  X(CONTROL_COMMAND_VERIFICATION_LIST, 116) \
  X(SENSOR_AZIMUTH_RATE, 117) \
  X(SENSOR_ELEVATION_RATE, 118) \
  X(SENSOR_ROLL_RATE, 119) \
  X(ON_BOARD_MI_STORAGE_PERCENT_FULL, 120) \
  X(ACTIVE_WAVELENGTH_LIST, 121) \
  X(COUNTRY_CODES, 122) \
  X(NUMBER_OF_NAVSATS_IN_VIEW, 123) \
  X(POSITIONING_METHOD_SOURCE, 124) \
  X(PLATFORM_STATUS, 125) \
  X(SENSOR_CONTROL_MODE, 126) \
  X(SENSOR_FRAME_RATE_PACK, 127) \
  X(WAVELENGTHS_LIST, 128) \
  X(TARGET_ID, 129) \
  X(AIRBASE_LOCATIONS, 130) \
  X(PLATFORM_CALL_SIGN, 131) \
  X(TAKE_OFF_TIME, 132) \
  X(TRANSMISSION_FREQUENCY, 133) \
  X(ON_BOARD_MI_STORAGE_CAPACITY, 134) \
  X(ZOOM_PERCENTAGE, 135) \
  X(COMMUNICATIONS_METHOD, 136) \
  X(LEAP_SECONDS, 137) \
  X(CORRECTION_OFFSET, 138) \
  X(PAYLOAD_LIST, 139) \
  X(ACTIVE_PAYLOADS, 140) \
  X(WEAPONS_STORES, 141) \
  X(WAYPOINT_LIST, 142) \
  X(OPERATIONAL_MODE, 77)

#define DEFINE_UL(name, id) constexpr UL name = make_st_ul(ST_ID, id);
ST0601_TAGS(DEFINE_UL)
#undef DEFINE_UL
#undef ST0601_TAGS

// Register encode/decode functions for ST 0601 tags
void register_st0601(KLVRegistry& reg);

} // namespace st0601
} // namespace misb

